const int ZERO = 48;
const int STAR = 42;
const int SLASH = 47;
const int PLUS = 43;
const int MINUS = 45;
const int LEFT_PARENTHESIS = 40;
const int RIGHT_PARENTHESIS = 41;
const int UNARY_MINUS = 0;

_ __test_simple() {
    slice text = "2 + 3";
    int expected = 5;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_simple2() {
    slice text = "2 - 3";
    int expected = -1;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_simple3() {
    slice text = "2 * 3";
    int expected = 6;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_simple4() {
    slice text = "2 / 3";
    int expected = 0;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_simple5() {
    slice text = "(2 + 3)";
    int expected = 5;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_corner_case() {
    slice text = "2+-3";
    int expected = -1;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_corner_case2() {
    slice text = "2";
    int expected = 2;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_corner_case3() {
    slice text = "-2";
    int expected = -2;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_corner_case4() {
    slice text = "    2    ";
    int expected = 2;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_corner_case5() {
    slice text = "3 / 3";
    int expected = 1;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_corner_case6() {
    slice text = "4 / 3";
    int expected = 1;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_corner_case7() {
    slice text = "   (      2    +       3      )      ";
    int expected = 5;

    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}
