const int ZERO = 48;
const int STAR = 42;
const int SLASH = 47;
const int PLUS = 43;
const int MINUS = 45;
const int LEFT_PARENTHESIS = 40;
const int RIGHT_PARENTHESIS = 41;
const int UNARY_MINUS = 0;

_ parse_postfix_inplace_helper(slice text, int expected) impure {
    var (_, stack) = invoke_method(parse_postfix_inplace, [text]);
    [int actual] = stack;

    throw_if(100, expected != actual);
}

_ __test_simple() {
    parse_postfix_inplace_helper("2 + 3", 5);
}

_ __test_simple2() {
    parse_postfix_inplace_helper("2 - 3", -1);
}

_ __test_simple3() {
    parse_postfix_inplace_helper("2 * 3", 6);
}

_ __test_simple4() {
    parse_postfix_inplace_helper("2 / 3", 0);
}

_ __test_simple5() {
    parse_postfix_inplace_helper("(2 + 3)", 5);
}

_ __test_corner_case() {
    parse_postfix_inplace_helper("2+-3", -1);
}

_ __test_corner_case2() {
    parse_postfix_inplace_helper("2", 2);
}

_ __test_corner_case3() {
    parse_postfix_inplace_helper("-2", -2);
}

_ __test_corner_case4() {
    parse_postfix_inplace_helper("    2    ", 2);
}

_ __test_corner_case5() {
    parse_postfix_inplace_helper("3 / 3", 1);
}

_ __test_corner_case6() {
    parse_postfix_inplace_helper("4 / 3", 1);
}

_ __test_corner_case7() {
    parse_postfix_inplace_helper("   (      2    +       3      )      ", 5);
}

_ __test_advanced() {
    parse_postfix_inplace_helper("2 + 2 * 2", 6);
}

_ __test_advanced2() {
    parse_postfix_inplace_helper("(2 + 2) * 2", 8);
}

_ __test_advanced3() {
    parse_postfix_inplace_helper("2 + 2 / 4 - 2", 0);
}

_ __test_advanced4() {
    parse_postfix_inplace_helper("(2 + 2) / (4 - 2)", 2);
}

_ __test_advanced5() {
    parse_postfix_inplace_helper("(2 + 2) / 4 - 2", -1);
}

_ __test_advanced6() {
    parse_postfix_inplace_helper("(10000 - 84) * (456 / 450 + 22) + 7 / (34 + 12) + 8 / 34 + 9", 228077);
}

_ __test_advanced7() {
    parse_postfix_inplace_helper("((((4) * (-1)) + 18 - 7 *(-2)*5/4/(-1)) - 500) / ((-2 * (4) + 5) / 2)", 252);
}
